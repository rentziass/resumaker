#! /bin/bash

RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m'
BLUE='\033[0;34m'

current_tag () {
 echo $(git tag -l --points-at HEAD)
}

check_tag_presence () {
  tag=$(current_tag)
  if [ ${#tag} -gt 0 ] ; then return 0
  else return 1
  fi
}

check_registry_name_presence () {
  if [ ! -f $PWD/.registry ]; then
    return 1
  fi

  rn=$(registry_name)
  if [ ${#rn} -le 0 ] ; then return 1
  fi

  return 0
}

build_binary () {
  echo "Building Go binary..."
  docker run --rm -v "$PWD:/go/src/app" golang:1.9.2 /bin/bash -c 'cd /go/src/app; CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o tmp/app .'
}

import_cert () {
  echo "Importing certificate..."
  docker run --rm -v "$PWD:/go/src/app" golang:1.9.2 /bin/bash -c 'cd /go/src/app; cp /etc/ssl/certs/ca-certificates.crt $PWD/tmp/ca-certificates.crt'
}

registry_name () {
  rn=$(<$PWD/.registry)
  echo $rn
}

main () {
  # Check registry name in $PWD/.registry
  if ! check_registry_name_presence ; then
    echo -e "${RED}Please check your .registry file"
    exit 1
  fi
  rn=$(registry_name)

  # Check if current commit has a tag that can be used
  # as a tag for Docker image
  if ! check_tag_presence ; then
    echo -e "${RED}No tag found for current commit"
    exit 1
  fi
  tag=$(current_tag)
  echo -e "${BLUE}Building ${rn}:${tag} 🚀 ${NC}"

  build_binary
  import_cert

  # $PWD/scripts/import_cert
  # image_name="registry.gitlab.com/rentziass/go_docker_sample:$(git describe --tags)"
  # latest_name="registry.gitlab.com/rentziass/go_docker_sample:latest"
  # docker build -t $image_name -t latest_name .
  #
  # echo "Cleaning up..."
  # rm -f ca-certificates.crt
  # $PWD/scripts/clean

  # Build Docker image with current git tag and 'latest'
  # if docker build -t ${rn}:${tag} -t ${rn}:latest . ; then
  #   echo -e "\n${GREEN}Image successfully built. 🍻 ${NC}"
  #   echo -e "If you want to push this newly created image run bin/push_current_image."
  #   exit 0
  # fi
  #
  # echo -e "${RED}Failed to build image"
  # exit 1


}

main

